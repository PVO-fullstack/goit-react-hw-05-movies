{"version":3,"file":"static/js/76.3249c7f0.chunk.js","mappings":"yNACA,EAA4B,wBAA5B,EAAgE,wB,SC4ChE,EAxCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAAQI,EAAEL,KAAd,GAC5B,GAAE,CAACH,KAGF,0BACE,eAAIS,UAAWC,EAAf,SACGP,EAAKQ,OAAS,EACXR,EAAKS,KAAI,SAAAC,GAAK,OACZ,gBAAIJ,UAAWC,EAAf,UACGG,EAAMC,cACL,gBACEC,IAAG,UAdL,mCAcK,OAAeF,EAAMC,cACxBE,IAAKH,EAAMI,KACXC,MAAM,QACNC,OAAO,WAGT,gBACEJ,IAAI,6DACJC,IAAKH,EAAMI,KACXC,MAAM,QACNC,OAAO,WAGX,uBAAIN,EAAMI,QACV,uBAAIJ,EAAMO,cAjBuBP,EAAMQ,GAD7B,IAqBd,uBAIX,C,+LCzCKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,oCAAuCD,IADrC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAS,mCAAG,WAAMC,GAAN,uFACAL,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACiBM,EADjB,YADA,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTG,EAAW,mCAAG,WAAMC,GAAN,gGAEAP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCR,IAFlC,cAEjBG,EAFiB,yBAGhBA,EAASC,MAHO,gCAKvBK,QAAQC,IAAI,OALW,yDAAH,sDASX1B,EAAW,mCAAG,WAAMwB,GAAN,uFACFP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CR,IADxC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXO,EAAc,mCAAG,WAAMH,GAAN,uFACLP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,4BAA0CR,IADrC,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from 'services/Api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const baseUrl = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    getCastById(movieId).then(r => setCast(r.cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul className={css.cast_list}>\n        {cast.length > 0\n          ? cast.map(actor => (\n              <li className={css.cast_item} key={actor.id}>\n                {actor.profile_path ? (\n                  <img\n                    src={`${baseUrl}${actor.profile_path}`}\n                    alt={actor.name}\n                    width=\"100px\"\n                    height=\"150px\"\n                  />\n                ) : (\n                  <img\n                    src=\"https://dummyimage.com/640x480/2a2a2a/ffffff&text=No Photo\"\n                    alt={actor.name}\n                    width=\"100px\"\n                    height=\"150px\"\n                  />\n                )}\n                <p>{actor.name}</p>\n                <p>{actor.character}</p>\n              </li>\n            ))\n          : 'Not have cast now'}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst key = '04e81f6e5279def5b1a55a2f401d6ead';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${key}`);\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${key}&query=${query}&page=1`\n  );\n  return response.data;\n};\n\nexport const getMoviById = async Id => {\n  try {\n    const response = await axios.get(`/movie/${Id}?api_key=${key}`);\n    return response.data;\n  } catch (error) {\n    console.log('Ups');\n  }\n};\n\nexport const getCastById = async Id => {\n  const response = await axios.get(`/movie/${Id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const getReviewsById = async Id => {\n  const response = await axios.get(`/movie/${Id}/reviews?api_key=${key}`);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCastById","then","r","className","css","length","map","actor","profile_path","src","alt","name","width","height","character","id","key","axios","getTrending","response","data","getMovies","query","getMoviById","Id","console","log","getReviewsById"],"sourceRoot":""}