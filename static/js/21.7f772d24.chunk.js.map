{"version":3,"file":"static/js/21.7f772d24.chunk.js","mappings":"0OA2BA,EAzBmB,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,oCACA,kBAAMC,SAAUH,EAAhB,WACE,kBAAOI,KAAK,SAASC,KAAK,UAC1B,mBAAQA,KAAK,SAAb,4BAGF,wBACGN,EAAMO,OAAS,GACdP,EAAMQ,KAAI,SAAAC,GAAI,OACZ,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMX,GAA1C,SACGO,EAAKK,gBAAkBL,EAAKM,iBAFxBN,EAAKE,GADF,QAUvB,ECCD,EArBe,WAAO,IAAD,EACnB,GAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,UAAGF,EAAaG,IAAI,mBAApB,QAAmC,IAEjDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUH,GAAUI,MAAK,SAAAC,GAAC,OAAIT,EAASS,EAAEC,QAAf,GAC3B,GAAE,CAACN,IAOJ,OACE,0BACE,SAAC,EAAD,CAAYrB,MAAOA,EAAOC,OAPf,SAAA2B,GACbA,EAAEC,iBACFT,EAAgB,CAAEC,SAAUO,EAAEE,OAAOC,SAASC,OAAOC,OACtD,KAOF,C,+LCtBKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,oCAAuCD,IADrC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXd,EAAS,mCAAG,WAAMe,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACiBK,EADjB,YADA,cACjBF,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTE,EAAW,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAkCP,IADhC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXI,EAAW,mCAAG,WAAMD,GAAN,uFACFN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CP,IADxC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXK,EAAc,mCAAG,WAAMF,GAAN,uFACLN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CP,IADrC,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/Api.jsx"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ films, submit }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <h1>Movies</h1>\n      <form onSubmit={submit}>\n        <input name=\"search\" type=\"text\" />\n        <button type=\"submit\">Find films</button>\n      </form>\n\n      <ul>\n        {films.length > 0 &&\n          films.map(film => (\n            <li key={film.id}>\n              <NavLink to={`${film.id}`} state={{ from: location }}>\n                {film.original_title || film.original_name}\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/Api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const moviesId = searchParams.get('moviesId') ?? '';\n\n  useEffect(() => {\n    getMovies(moviesId).then(r => setFilms(r.results));\n  }, [moviesId]);\n\n  const submit = e => {\n    e.preventDefault();\n    setSearchParams({ moviesId: e.target.elements.search.value });\n  };\n\n  return (\n    <div>\n      <MoviesList films={films} submit={submit} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst key = '04e81f6e5279def5b1a55a2f401d6ead';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${key}`);\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${key}&query=${query}&page=1`\n  );\n  return response.data;\n};\n\nexport const getMoviById = async Id => {\n  const response = await axios.get(`/movie/${Id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const getCastById = async Id => {\n  const response = await axios.get(`/movie/${Id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const getReviewsById = async Id => {\n  const response = await axios.get(`/movie/${Id}/reviews?api_key=${key}`);\n  return response.data;\n};\n"],"names":["films","submit","location","useLocation","onSubmit","name","type","length","map","film","to","id","state","from","original_title","original_name","useState","setFilms","useSearchParams","searchParams","setSearchParams","moviesId","get","useEffect","getMovies","then","r","results","e","preventDefault","target","elements","search","value","key","axios","getTrending","response","data","query","getMoviById","Id","getCastById","getReviewsById"],"sourceRoot":""}