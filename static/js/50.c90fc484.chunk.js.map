{"version":3,"file":"static/js/50.c90fc484.chunk.js","mappings":"iOACA,EAAiC,mCAAjC,EAA8E,4BAA9E,EAAsH,8B,SC4CtH,EAvCmB,SAAC,GAA6C,IAAD,EAA1CA,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OAC3CC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,WAExD,OACE,iCACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAeC,GAAIN,EAAiBO,QAArD,wBAIF,iBAAKH,UAAWC,EAAhB,WACE,gBAAKG,IAAG,UAdA,mCAcA,OAAeX,GAAUY,IAAI,GAAGC,MAAO,OAC/C,iBAAKN,UAAU,QAAf,WACE,wBAAKV,KACL,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,WAGR,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAG,OAAOJ,MAAO,CAAEC,KAAML,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMQ,GAAG,UAAUJ,MAAO,CAAEC,KAAML,GAAlC,8BAQX,ECGD,EAzCsB,WACpB,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACQ,KAAZL,IAGJM,EAAAA,EAAAA,IAAYN,GAASO,MAAK,SAAAC,GAExBJ,EADeI,EAEhB,GACF,GAAE,CAACR,IAEJ,IAAIf,EAAa,GAEjB,GAAIkB,EAAM,CACR,IAAQpB,EAAyCoB,EAAzCpB,MAAOC,EAAkCmB,EAAlCnB,SAAUyB,EAAwBN,EAAxBM,OAAQC,EAAgBP,EAAhBO,YAIjC,GAHID,IACFxB,EAAawB,EAAOE,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,QAEzCJ,EACH,OAGF,OACE,4BACE,SAAC,EAAD,CACE3B,MAAOA,EACPC,SAAUA,EACVC,WAAYA,EACZC,OAAQwB,KAEV,SAAC,EAAAK,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,CACF,C,+LC1CKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,oCAAuCD,IADrC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAS,mCAAG,WAAMC,GAAN,uFACAL,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACiBM,EADjB,YADA,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTf,EAAW,mCAAG,WAAMkB,GAAN,uFACFN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAkCP,IADhC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXI,EAAW,mCAAG,WAAMD,GAAN,uFACFN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CP,IADxC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXK,EAAc,mCAAG,WAAMF,GAAN,uFACLN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CP,IADrC,cACtBG,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","pages/MoviesDetails.jsx","services/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"film_conteiner\":\"MoviesItem_film_conteiner__SbmoH\",\"go_back\":\"MoviesItem_go_back__KJ3tO\",\"link_back\":\"MoviesItem_link_back__sNdoh\"};","import { useRef } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from '../MoviesItem/MoviesItem.module.css';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesItem = ({ title, overview, genresName, poster }) => {\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from || '/movies');\n\n  return (\n    <>\n      <div className={css.go_back}>\n        <Link className={css.link_back} to={backLinkLocation.current}>\n          Go back\n        </Link>\n      </div>\n      <div className={css.film_conteiner}>\n        <img src={`${baseUrl}${poster}`} alt=\"\" width={200} />\n        <div className=\"other\">\n          <h1>{title}</h1>\n          <h2>OverWiew</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresName}</p>\n        </div>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesItem;\n","import { Outlet, useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getMoviById } from 'services/Api';\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState({});\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    getMoviById(movieId).then(r => {\n      const result = r;\n      setFilm(result);\n    });\n  }, [movieId]);\n\n  let genresName = [];\n\n  if (film) {\n    const { title, overview, genres, poster_path } = film;\n    if (genres) {\n      genresName = genres.map(el => el.name).join(', ');\n    }\n    if (!poster_path) {\n      return;\n    }\n\n    return (\n      <div>\n        <MoviesItem\n          title={title}\n          overview={overview}\n          genresName={genresName}\n          poster={poster_path}\n        />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst key = '04e81f6e5279def5b1a55a2f401d6ead';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${key}`);\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${key}&query=${query}&page=1`\n  );\n  return response.data;\n};\n\nexport const getMoviById = async Id => {\n  const response = await axios.get(`/movie/${Id}?api_key=${key}`);\n  return response.data;\n};\n\nexport const getCastById = async Id => {\n  const response = await axios.get(`/movie/${Id}/credits?api_key=${key}`);\n  return response.data;\n};\n\nexport const getReviewsById = async Id => {\n  const response = await axios.get(`/movie/${Id}/reviews?api_key=${key}`);\n  return response.data;\n};\n"],"names":["title","overview","genresName","poster","location","useLocation","backLinkLocation","useRef","state","from","className","css","to","current","src","alt","width","movieId","useParams","useState","film","setFilm","useEffect","getMoviById","then","r","genres","poster_path","map","el","name","join","Suspense","fallback","key","axios","getTrending","response","data","getMovies","query","Id","getCastById","getReviewsById"],"sourceRoot":""}